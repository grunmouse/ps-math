{(2d.ps) stealfile} /2sub ifnotkey
{(math.ps) stealfile} /sq ifnotkey

%[x1, y1, x2, y2]
/2lineYX {
	1 2index
	2sub
	%[x1, y1, dx, dy]
	exch div
	%[x1, y1, dy/dx]
	[ 4 1 roll
		%[mark, x1, y1, dy/dx]
		exch
		%[mark, x1, dy/dx, y1]
		/sub cvx 3 1 roll
		%[mark x1 (sub) dy/dx y1]
		/mul cvx 2 1 roll
		%[mark x1 (sub) dy/dx (mul) y1]
		/add cvx
		%[mark x1 (sub) dy/dx (mul) y1 (add)]
	]
	cvx
} def

%[x1, y1, x2, y2]
/2lineXY {
	1 2index
	2sub
	%[x1, y1, dx, dy]
	div
	%[x1, y1, dx/dy]
	[ 4 1 roll
		%[mark, x1, y1, dx/dy]
		3 2 roll
		%[mark, y1, dx/dy, x1]
		/sub cvx 3 1 roll
		%[mark y1 (sub) dx/dy x1]
		/mul cvx 2 1 roll
		%[mark y1 (sub) dx/dy (mul) x1]
		/add cvx
		%[mark y1 (sub) dx/dy (mul) x1 (add)]
	]
	cvx
} def

%пересечение с горизонталью
%[x1, y1, x2, y2, y]
/2crossh {
	5 1 roll
	1 2index 2sub
	div
	%[y, x1, y1, dx/dy]
	exch
	%[y, x1, dx/dy, y1]
	3 index
	exch sub
	mul
	add
	%[y, x]
	exch
} def

/2crossv {
	%[x1, y1, x2, y2, x]
	5 1 roll
	1 2index 2sub
	exch div
	%[x, x1, y1, dy/dx]
	3 2 roll
	%[x, y1, dy/dx, x1]
	3 index
	exch sub
	mul
	add
} def

%[x1, y1, x2, y2, x3, y3, x4, y4]
/2cross {
	0 dict begin
		/P4 2edef
		/P3 2edef
		/P2 2edef
		/P1 2edef
		
		/P21 P2 P1 2sub 2def
		/P43 P4 P3 2sub 2def
		
		/b1 P21 P1 2times def
		/b2 P43 P3 2times def
		
		P21 neg exch
		P43 neg exch
		b1 b2
		
		kramer2
	end
} def
%[x, y]

/2distance {
	2sub 2hypot
} def

%[x1, y1, R1, x2, y2, R2]
/2crosscircle {
	0 dict begin
		/R2 exch def
		/P2 2edef
		/R1 exch def
		/P1 2edef
		/D P2 P1 2sub 2def
		D /b exch def /a exch def
		/m R1 sq D 2sq add R2 sq sub 2 div def
		
		D 2sq
		2 m a mul mul neg
		m sq b sq R1 sq mul sub
		squareeq
		aload length
		1 eq{
			dup sq neg R1 sq add sqrt
			2dup
			neg
			% C1, C2
		}
		{
			a neg b div 2mul
			m dup 2add
		}
		ifelse
		
		/C2 2edef
		/C1 2edef
		
		P1 C1 2add
		P1 C2 2add
	end
} def
%[C1, C2]